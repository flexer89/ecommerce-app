{
  "version": 3,
  "timeout": "3s",
  "endpoints": [
    {
      "endpoint": "/api/products/{get1}",
      "input_headers": [
        "*"
      ],
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/get",
      "input_headers": [
        "*"
      ],
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/get",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "limit",
        "offset",
        "arabica",
        "robusta",
        "minPrice",
        "maxPrice",
        "search",
        "sort_order",
        "sort_by"
      ]
    },
    {
      "endpoint": "/api/products/download/images",
      "input_headers": [
        "*"
      ],
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/download/images",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "product_ids"
      ]
    },
    {
      "endpoint": "/api/products/{get1}/{get2}",
      "input_headers": [
        "*"
      ],
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}/{get2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/{get1}/{get2}/{get3}",
      "input_headers": [
        "*"
      ],
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}/{get2}/{get3}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/{delete1}/{delete2}",
      "input_headers": [
        "*"
      ],
      "method": "DELETE",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{delete1}/{delete2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "DELETE",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/create",
      "input_headers": [
        "*"
      ],
      "method": "POST",
      "output_encoding": "no-op",
      "extra_config": {
        "github.com/devopsfaith/krakend/proxy": {
          "headers_to_pass": [
            "*"
          ],
          "allow_multipart_form_data": true
        }
      },
      "backend": [
        {
          "url_pattern": "/create",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/update/{update1}",
      "input_headers": [
        "*"
      ],
      "method": "PUT",
      "output_encoding": "no-op",
      "extra_config": {
        "github.com/devopsfaith/krakend/proxy": {
          "headers_to_pass": [
            "*"
          ],
          "allow_multipart_form_data": true
        }
      },
      "backend": [
        {
          "url_pattern": "/update/{update1}",
          "encoding": "no-op",
          "sd": "static",
          "method": "PUT",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/products/update/{update1}/{update2}",
      "input_headers": [
        "*"
      ],
      "method": "PUT",
      "output_encoding": "no-op",
      "extra_config": {
        "github.com/devopsfaith/krakend/proxy": {
          "headers_to_pass": [
            "*"
          ],
          "allow_multipart_form_data": true
        }
      },
      "backend": [
        {
          "url_pattern": "/update/{update1}/{update2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "PUT",
          "host": [
            "http://products-service:5000"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/orders/{get1}",
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://orders-service:5010"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/orders/{get1}/{get2}",
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}/{get2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://orders-service:5010"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/orders/{put1}/{put2}/{put3}",
      "method": "PUT",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{put1}/{put2}/{put3}",
          "encoding": "no-op",
          "sd": "static",
          "method": "PUT",
          "host": [
            "http://orders-service:5010"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/orders/get",
      "method": "GET",
      "input_headers": [
        "*"
      ],
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/get",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://orders-service:5010"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "limit",
        "status",
        "offset",
        "search"
      ]
    },
    {
      "endpoint": "/api/shipments/{get1}/{get2}",
      "method": "GET",
      "output_encoding": "no-op",
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://keycloak:8080/realms/jolszak/protocol/openid-connect/certs",
          "disable_jwk_security": true
        }
      },
      "backend": [
        {
          "url_pattern": "/{get1}/{get2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://shipments-service:5050"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/shipments/update/{shipmentId}",
      "method": "PATCH",
      "output_encoding": "no-op",
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://keycloak:8080/realms/jolszak/protocol/openid-connect/certs",
          "disable_jwk_security": true
        }
      },
      "backend": [
        {
          "url_pattern": "/update/{shipmentId}",
          "encoding": "no-op",
          "sd": "static",
          "method": "PATCH",
          "host": [
            "http://shipments-service:5050"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "status",
        "current_location",
        "delivery_date"
      ]
    },
    {
      "endpoint": "/api/shipments/{get1}",
      "method": "GET",
      "output_encoding": "no-op",
      "extra_config": {
        "auth/validator": {
          "alg": "RS256",
          "jwk_url": "http://keycloak:8080/realms/jolszak/protocol/openid-connect/certs",
          "disable_jwk_security": true
        }
      },
      "backend": [
        {
          "url_pattern": "/{get1}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://shipments-service:5050"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/shipments/get",
      "method": "GET",
      "input_headers": [
        "*"
      ],
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/get",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://shipments-service:5050"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "limit",
        "offset",
        "status",
        "search"
      ]
    },
    {
      "endpoint": "/api/payments/{get1}",
      "input_headers": [
        "*"
      ],
      "method": "POST",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}",
          "encoding": "no-op",
          "sd": "static",
          "method": "POST",
          "host": [
            "http://payments-service:5020"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/users/{get1}/{get2}",
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{get1}/{get2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://users-service:5030"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/users/getall",
      "method": "GET",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/getall",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://users-service:5030"
          ],
          "disable_host_sanitize": false
        }
      ]
    },
    {
      "endpoint": "/api/users/get",
      "method": "GET",
      "input_headers": [
        "*"
      ],
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/get",
          "encoding": "no-op",
          "sd": "static",
          "method": "GET",
          "host": [
            "http://users-service:5030"
          ],
          "disable_host_sanitize": false
        }
      ],
      "input_query_strings": [
        "limit",
        "search",
        "offset",
        "ids"
      ]
    },
    {
      "endpoint": "/api/users/{put1}/{put2}",
      "method": "PATCH",
      "output_encoding": "no-op",
      "backend": [
        {
          "url_pattern": "/{put1}/{put2}",
          "encoding": "no-op",
          "sd": "static",
          "method": "PATCH",
          "host": [
            "http://users-service:5030"
          ],
          "disable_host_sanitize": false
        }
      ]
    }
  ],
  "output_encoding": "json",
  "extra_config": {
    "telemetry/opentelemetry": {
      "trace_sample_rate": 0.25,
      "metric_reporting_period": 1,
      "exporters": {
        "prometheus": [
          {
            "name": "promstack-kube-prometheus-prometheus",
            "port": 8081
          }
        ]
      },
      "layers": {
        "global": {
          "disable_metrics": false,
          "disable_traces": false,
          "disable_propagation": false
        },
        "proxy": {
          "disable_metrics": false,
          "disable_traces": false
        },
        "backend": {
          "metrics": {
            "disable_stage": false,
            "round_trip": false,
            "read_payload": false,
            "detailed_connection": false,
            "static_attributes": []
          },
          "traces": {
            "disable_stage": false,
            "round_trip": false,
            "read_payload": false,
            "detailed_connection": false,
            "static_attributes": []
          }
        }
      }
    }
  }
}