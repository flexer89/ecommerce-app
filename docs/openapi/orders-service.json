{
    "openapi": "3.1.0",
    "info": {
        "title": "FastAPI",
        "version": "0.1.0"
    },
    "paths": {
        "/health": {
            "get": {
                "summary": "Health",
                "operationId": "health_health_get",
                "responses": {
                    "200": {
                        "description": "Successful Response",
                        "content": {
                            "application/json": {
                                "schema": {}
                            }
                        }
                    }
                }
            }
        },
        "/get/{order_id}": {
            "get": {
                "summary": "Read Order",
                "description": "Retrieve the details of a specific order by its ID. If the order exists, it returns the order details. If the order is not found, a 404 error is raised.",
                "operationId": "read_order_get__order_id__get",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Order Id"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Order found and returned successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/create": {
            "post": {
                "summary": "Create Order",
                "description": "Create a new order in the database. This endpoint accepts order details in the request body and returns the ID of the newly created order.",
                "operationId": "create_order_create_post",
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateOrderRequest"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "201": {
                        "description": "Order created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateOrderResponse"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error or database error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/update/{order_id}/status": {
            "put": {
                "summary": "Update Order Status",
                "description": "Update the status of a specific order. The client must provide the order ID and the new status.",
                "operationId": "update_order_status_update__order_id__status_put",
                "parameters": [
                    {
                        "name": "order_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "title": "Order Id"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/OrderUpdateStatus"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Order status updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Order"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Order not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/getbyuser/{user_id}": {
            "get": {
                "summary": "Read Orders By User",
                "description": "Retrieve all orders for a specific user by their user ID. A limit can be provided to restrict the number of returned orders.",
                "operationId": "read_orders_by_user_getbyuser__user_id__get",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "uuid",
                            "title": "User Id"
                        }
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Order"
                                    },
                                    "title": "Response Read Orders By User Getbyuser  User Id  Get"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "No orders found for the specified user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ErrorResponse"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/bestsellers": {
            "get": {
                "summary": "Get Bestsellers",
                "description": "Retrieve a list of the best-selling products. The result contains the product ID and the count of orders. You can limit the number of bestsellers returned by specifying the `limit` parameter.",
                "operationId": "get_bestsellers_bestsellers_get",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 3,
                            "title": "Limit"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bestselling products retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "$ref": "#/components/schemas/Bestseller"
                                    },
                                    "title": "Response Get Bestsellers Bestsellers Get"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/trends": {
            "get": {
                "summary": "Get Order Trends",
                "description": "Retrieve order trends, including monthly trends for orders and revenue, average processing time, order status counts, cancellations, conversion rate, and top customers. This endpoint returns various metrics related to the order data.",
                "operationId": "get_order_trends_trends_get",
                "responses": {
                    "200": {
                        "description": "Order trends retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "title": "Response Get Order Trends Trends Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/count": {
            "get": {
                "summary": "Get Orders Count",
                "description": "Retrieve the total count of all orders in the system.",
                "operationId": "get_orders_count_count_get",
                "responses": {
                    "200": {
                        "description": "Total number of orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "integer",
                                    "title": "Response Get Orders Count Count Get"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/get": {
            "get": {
                "summary": "Get Orders",
                "description": "Retrieve a list of orders with optional filters such as status, search by order ID, pagination with limit and offset. Returns the list of orders and the total count.",
                "operationId": "get_orders_get_get",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 10,
                            "title": "Limit"
                        }
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 0,
                            "title": "Offset"
                        }
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "title": "Status"
                        }
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "title": "Search"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Orders retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetOrdersResponse-Input"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/HTTPValidationError"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Bestseller": {
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "title": "Product Id"
                    },
                    "order_count": {
                        "type": "integer",
                        "title": "Order Count"
                    }
                },
                "type": "object",
                "required": [
                    "product_id",
                    "order_count"
                ],
                "title": "Bestseller"
            },
            "CreateOrderRequest": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/OrderItem-Input"
                        },
                        "type": "array",
                        "title": "Items"
                    },
                    "total_price": {
                        "type": "number",
                        "title": "Total Price"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "items",
                    "total_price"
                ],
                "title": "CreateOrderRequest"
            },
            "CreateOrderResponse": {
                "properties": {
                    "order_id": {
                        "type": "integer",
                        "title": "Order Id"
                    }
                },
                "type": "object",
                "required": [
                    "order_id"
                ],
                "title": "CreateOrderResponse"
            },
            "ErrorResponse": {
                "properties": {
                    "detail": {
                        "type": "string",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "required": [
                    "detail"
                ],
                "title": "ErrorResponse"
            },
            "GetOrdersResponse-Input": {
                "properties": {
                    "orders": {
                        "items": {
                            "$ref": "#/components/schemas/OrderResponse"
                        },
                        "type": "array",
                        "title": "Orders"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    }
                },
                "type": "object",
                "required": [
                    "orders",
                    "total"
                ],
                "title": "GetOrdersResponse"
            },
            "GetOrdersResponse-Output": {
                "properties": {
                    "orders": {
                        "items": {
                            "$ref": "#/components/schemas/OrderResponse"
                        },
                        "type": "array",
                        "title": "Orders"
                    },
                    "total": {
                        "type": "integer",
                        "title": "Total"
                    }
                },
                "type": "object",
                "required": [
                    "orders",
                    "total"
                ],
                "title": "GetOrdersResponse"
            },
            "HTTPValidationError": {
                "properties": {
                    "detail": {
                        "items": {
                            "$ref": "#/components/schemas/ValidationError"
                        },
                        "type": "array",
                        "title": "Detail"
                    }
                },
                "type": "object",
                "title": "HTTPValidationError"
            },
            "Order": {
                "properties": {
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    },
                    "total_price": {
                        "type": "number",
                        "title": "Total Price"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "items": {
                        "items": {
                            "$ref": "#/components/schemas/OrderItem-Output"
                        },
                        "type": "array",
                        "title": "Items"
                    }
                },
                "type": "object",
                "required": [
                    "user_id",
                    "total_price",
                    "status",
                    "id",
                    "created_at",
                    "updated_at",
                    "items"
                ],
                "title": "Order"
            },
            "OrderItem-Input": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "quantity": {
                        "type": "integer",
                        "title": "Quantity"
                    },
                    "price": {
                        "type": "number",
                        "title": "Price"
                    },
                    "weight": {
                        "type": "number",
                        "title": "Weight"
                    },
                    "grind": {
                        "type": "string",
                        "title": "Grind"
                    }
                },
                "type": "object",
                "required": [
                    "id",
                    "quantity",
                    "price",
                    "weight",
                    "grind"
                ],
                "title": "OrderItem"
            },
            "OrderItem-Output": {
                "properties": {
                    "product_id": {
                        "type": "integer",
                        "title": "Product Id"
                    },
                    "quantity": {
                        "type": "integer",
                        "title": "Quantity"
                    },
                    "price": {
                        "type": "number",
                        "title": "Price"
                    },
                    "weight": {
                        "type": "number",
                        "title": "Weight"
                    },
                    "grind": {
                        "type": "string",
                        "title": "Grind"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    }
                },
                "type": "object",
                "required": [
                    "product_id",
                    "quantity",
                    "price",
                    "weight",
                    "grind",
                    "id",
                    "created_at"
                ],
                "title": "OrderItem"
            },
            "OrderResponse": {
                "properties": {
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Created At"
                    },
                    "id": {
                        "type": "integer",
                        "title": "Id"
                    },
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    },
                    "total_price": {
                        "type": "number",
                        "title": "Total Price"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "title": "Updated At"
                    },
                    "user_id": {
                        "type": "string",
                        "format": "uuid",
                        "title": "User Id"
                    }
                },
                "type": "object",
                "required": [
                    "created_at",
                    "id",
                    "status",
                    "total_price",
                    "updated_at",
                    "user_id"
                ],
                "title": "OrderResponse"
            },
            "OrderUpdateStatus": {
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/StatusEnum"
                    }
                },
                "type": "object",
                "required": [
                    "status"
                ],
                "title": "OrderUpdateStatus"
            },
            "StatusEnum": {
                "type": "string",
                "enum": [
                    "pending",
                    "processing",
                    "shipped",
                    "delivered",
                    "cancelled",
                    "on_hold"
                ],
                "title": "StatusEnum"
            },
            "ValidationError": {
                "properties": {
                    "loc": {
                        "items": {
                            "anyOf": [
                                {
                                    "type": "string"
                                },
                                {
                                    "type": "integer"
                                }
                            ]
                        },
                        "type": "array",
                        "title": "Location"
                    },
                    "msg": {
                        "type": "string",
                        "title": "Message"
                    },
                    "type": {
                        "type": "string",
                        "title": "Error Type"
                    }
                },
                "type": "object",
                "required": [
                    "loc",
                    "msg",
                    "type"
                ],
                "title": "ValidationError"
            }
        }
    }
}
