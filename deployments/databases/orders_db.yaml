apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: orders-db
  template:
    metadata:
      labels:
        app: orders-db
    spec:
      containers:
      - name: orders-db
        image: postgres:16.2-alpine3.19
        env:
          - name: POSTGRES_USER
            valueFrom:
              secretKeyRef:
                name: orders-db-secret
                key: postgres-user
          - name: POSTGRES_PASSWORD
            valueFrom:
              secretKeyRef:
                name: orders-db-secret
                key: postgres-password
          - name: POSTGRES_DB
            valueFrom:
              secretKeyRef:
                name: orders-db-secret
                key: postgres-db
        ports:
        - containerPort: 5432
        volumeMounts:
        - name: init-script
          mountPath: /docker-entrypoint-initdb.d
      volumes:
      - name: init-script 
        configMap:
          name: init-sql-configmap-orders

---
apiVersion: v1
kind: Service
metadata:
  name: orders-db
spec:
  selector:
    app: orders-db
  ports:
    - protocol: TCP
      port: 5432
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: init-sql-configmap-orders
data:
  init.sql: |
    -- Drop tables if they already exist
    DROP TABLE IF EXISTS order_items;
    DROP TABLE IF EXISTS orders;
    DROP TYPE IF EXISTS status_enum;

    -- Create enum type for order status
    CREATE TYPE status_enum AS ENUM ('pending', 'processing', 'shipped');

    -- Create orders table
    CREATE TABLE orders (
        id SERIAL PRIMARY KEY,
        user_id VARCHAR NOT NULL,
        total_price FLOAT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
        status status_enum DEFAULT 'pending'
    );

    -- Create order_items table
    CREATE TABLE order_items (
        id SERIAL PRIMARY KEY,
        order_id INTEGER REFERENCES orders(id) ON DELETE CASCADE,
        product_id INTEGER,
        quantity INTEGER,
        price FLOAT,
        created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
    );

    -- Add sample data
    INSERT INTO orders (user_id, total_price, status) VALUES ('5e44e20e-0ba8-4038-8e62-33fa661fce70', 100.50, 'pending');
    INSERT INTO orders (user_id, total_price, status) VALUES ('5e44e20e-0ba8-4038-8e62-33fa661fce70', 200.75, 'processing');

    INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (1, 101, 2, 50.25);
    INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (1, 102, 1, 100.50);
    INSERT INTO order_items (order_id, product_id, quantity, price) VALUES (2, 103, 5, 40.15);
